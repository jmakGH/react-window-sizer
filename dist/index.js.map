{"version":3,"sources":["../src/index.js"],"names":["optimizers","debounce","throttle","WindowSizer","props","getWindowSize","height","window","innerHeight","width","innerWidth","handleResize","e","size","onResize","setState","optimizeBy","optimizeEvery","optimize","optimizedOnResize","state","addEventListener","removeEventListener","children","propTypes","isRequired","defaultProps"],"mappings":";;;;;;;;AAAA;;AACA;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,aAAa,EAACC,0BAAD,EAAWC,0BAAX,EAAnB;;IAEqBC,W;;;AA2BnB,uBAAYC,KAAZ,EAAmB;AAAA;;AAGjB;AAHiB,0HACXA,KADW;;AAAA,UAuBnBC,aAvBmB,GAuBH,YAAM;AACpB,aAAO,EAACC,QAAQC,OAAOC,WAAhB,EAA6BC,OAAOF,OAAOG,UAA3C,EAAP;AACD,KAzBkB;;AAAA,UA2BnBC,YA3BmB,GA2BJ,UAACC,CAAD,EAAO;AACpB,UAAMC,OAAO,MAAKR,aAAL,EAAb;;AAEA,YAAKD,KAAL,CAAWU,QAAX,CAAoBF,CAApB,EAAuBC,IAAvB;AACA,YAAKE,QAAL,CAAcF,IAAd;AACD,KAhCkB;;AAAA,QAIVG,UAJU,GAImBZ,KAJnB,CAIVY,UAJU;AAAA,QAIEC,aAJF,GAImBb,KAJnB,CAIEa,aAJF;;AAKjB,QAAMC,WAAWlB,WAAWgB,UAAX,CAAjB;;AAEA,UAAKG,iBAAL,GAA0BD,WACtBA,SAAS,MAAKP,YAAd,EAA4BM,aAA5B,CADsB,GAEtB,MAAKN,YAFT;;AAKA,UAAKS,KAAL,GAAa,MAAKf,aAAL,EAAb;AAZiB;AAalB;;;;wCAEmB;AAClBE,aAAOc,gBAAP,CAAwB,QAAxB,EAAkC,KAAKF,iBAAvC;AACD;;;2CAEsB;AACrBZ,aAAOe,mBAAP,CAA2B,QAA3B,EAAqC,KAAKH,iBAA1C;AACD;;;6BAaQ;AACP,aAAO,KAAKf,KAAL,CAAWmB,QAAX,CAAoB;AACzBjB,gBAAQ,KAAKc,KAAL,CAAWd,MADM;AAEzBG,eAAO,KAAKW,KAAL,CAAWX;AAFO,OAApB,CAAP;AAID;;;;;;AAlEkBN,W,CACZqB,S,GAAY;AACjB;;;;AAIAD,YAAU,gBAAKE,UALE;AAMjB;;;AAGAX,2BATiB;AAUjB;;;AAGAE,cAAY,sBAAM,CAAC,EAAD,EAAK,UAAL,EAAiB,UAAjB,CAAN,CAbK;AAcjB;;;AAGAC;AAjBiB,C;AADAd,W,CAqBZuB,Y,GAAe;AACpBZ,YAAU,oBAAM,CAAE,CADE;AAEpBE,cAAY,EAFQ;AAGpBC,iBAAe;AAHK,C;kBArBHd,W","file":"index.js","sourcesContent":["import {Component} from 'react';\nimport {func, number, oneOf} from 'prop-types';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\n\nconst optimizers = {debounce, throttle};\n\nexport default class WindowSizer extends Component {\n  static propTypes = {\n    /**\n     * Render function that this component injects the window height and width\n     * into.\n     */\n    children: func.isRequired,\n    /**\n     * Callback that is invoked on resize events.\n     */\n    onResize: func,\n    /**\n     * Method to optimize the resize handler.\n     */\n    optimizeBy: oneOf(['', 'debounce', 'throttle']),\n    /**\n     * Wait duration in milliseconds to throttle the optimizer invocation.\n     */\n    optimizeEvery: number,\n  }\n\n  static defaultProps = {\n    onResize: () => {},\n    optimizeBy: '',\n    optimizeEvery: 250,\n  }\n\n  constructor(props) {\n    super(props);\n\n    // Set up optimized resize handler.\n    const {optimizeBy, optimizeEvery} = props;\n    const optimize = optimizers[optimizeBy];\n\n    this.optimizedOnResize = (optimize\n      ? optimize(this.handleResize, optimizeEvery)\n      : this.handleResize\n    );\n\n    this.state = this.getWindowSize();\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this.optimizedOnResize);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.optimizedOnResize);\n  }\n\n  getWindowSize = () => {\n    return {height: window.innerHeight, width: window.innerWidth};\n  }\n\n  handleResize = (e) => {\n    const size = this.getWindowSize();\n\n    this.props.onResize(e, size);\n    this.setState(size);\n  }\n\n  render() {\n    return this.props.children({\n      height: this.state.height,\n      width: this.state.width,\n    });\n  }\n}\n"]}